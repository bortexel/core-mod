import net.fabricmc.loom.task.RemapJarTask

buildscript {
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:6.1.0'
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'fabric-loom' version '0.8-SNAPSHOT'
    id 'maven-publish'
}

apply plugin: 'com.github.johnrengelman.shadow'

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version as Object
group = project.maven_group as Object

repositories {
    maven {
        name = 'RuscalWorld Releases'
        url = 'https://maven.ruscalworld.ru/releases'
        credentials {
            username = MavenUsername
            password = MavenPassword
        }
    }
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.

    implementation "org.xerial:sqlite-jdbc:${project.sqlite_version}"
    implementation "ru.ruscalworld:storagelib:${project.storagelib_version}"
    implementation "ru.bortexel:bortexel4j:${project.bortexel4j_version}"

    compileOnly 'net.luckperms:api:5.3'
}

processResources {
    inputs.property "version", project.version
    duplicatesStrategy = DuplicatesStrategy.INCLUDE

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

shadowJar {
    archiveClassifier = "all-dev"

    dependencies {
        include(dependency("ru.bortexel:bortexel4j:${project.bortexel4j_version}"))
        include(dependency("org.xerial:sqlite-jdbc:${project.sqlite_version}"))
        include(dependency("ru.ruscalworld:storagelib:${project.storagelib_version}"))
        include(dependency("com.squareup.okhttp3:okhttp"))
        include(dependency("com.squareup.okio:okio"))
    }

    relocate("ru.ruscalworld.bortexel4j", "ru.bortexel.core.dependencies.bortexel4j")
    relocate("ru.ruscalworld.storagelib", "ru.bortexel.core.dependencies.storagelib")
    relocate("okhttp3", "ru.bortexel.chat.dependencies.okhttp3")
    relocate("okio", "ru.bortexel.chat.dependencies.okio")
}

task remapShadowJar(type: RemapJarTask, dependsOn: shadowJar) {
    input = shadowJar.archiveFile
    archiveFileName = shadowJar.archiveFileName.get().replaceAll("-dev\\.jar\$", ".jar")
    addNestedDependencies = true
    remapAccessWidener = true
}

assemble.dependsOn(remapShadowJar)

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
